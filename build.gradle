plugins {
    id 'java'
}

group = 'me.eradiator'
version = '22.12'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'andrei1058'
        url = 'https://repo.andrei1058.dev/releases/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
    compileOnly(files("libs/BedWars1058.jar"))
    compileOnly 'com.andrei1058.bedwars:bedwars-api:22.7'
    implementation 'com.github.cryptomorin:XSeries:9.1.0'
    implementation 'com.github.KodySimpson:SimpAPI:4.3.2'
    implementation(files("libs/PlaceholderAPI-2.11.2.jar"))
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
